<?php
function st_order_permission() {
	return array (
			'st_order_per_add' => array (
					'title' => 'Create form st_order According To choice',
					'description' => 'Form st_order Creation' 
			),
			'st_order_per_view' => array (
					'title' => 'View The List Of st_order',
					'description' => 'View st_order according to his powers' 
			) 
	);
}
function st_order_menu() {
	$items ['admins/st_order/add'] = array (
			'title' => 'Add Order ',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_add' 
			),
			'access arguments' => array (
					0 => 'st_order_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_order/view'] = array (
			'title' => 'St Order List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_view' 
			),
			'access arguments' => array (
					0 => 'st_order_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_order/edit/%'] = array (
			'title' => 'St Order Edit',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_add',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_order_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_order/detail/%'] = array (
			'title' => 'St Order detail',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_detail',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_order_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	return $items;
}
function st_order_add($form, &$form_state, $id = NULL) {
	drupal_add_js ( 'misc/user_validation.js', 'file' );
	if (! empty ( $id )) {
		$data = get_data_by_pks ( 'st_order', $id, 'mid' );
		
		$form ['#submit'] [] = "st_order_edit_submit";
		$form ['id'] = array (
				'#type' => 'value',
				'#value' => $id 
		);
	}
	$form ['mid'] = array (
			'#type' => 'select',
			'#title' => 'Mid',
			'#options' => ut_material_inventery (),
			'#attributes' => array (
					'placeholder' => '' 
			),
			
			'#default_value' => isset ( $data->mid ) ? $data->mid : "",
			'#ajax' => array (
					'callback' => 'ajax_total_selling_price_callback',
					'wrapper' => array (
							'reg_child_state',
							'reg_qty_state' 
					),
					'effect' => 'fade' 
			) 
	);
	
	$form ['qty'] = array (
			'#type' => 'textfield',
			'#title' => 'Qty',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '' 
			),
			
			'#default_value' => isset ( $data->qty ) ? $data->qty : "" 
	);
	$form ['qty_baseprice'] = array (
			'#type' => 'textfield',
			'#title' => 'Qty_base',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '' 
			),
			'#prefix' => '<div id="reg_qty_state">',
			'#suffix' => '</div>',
			
			'#default_value' => isset ( $data->qty ) ? $data->qty : "" 
	);
	
	$form ['base_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Base Price',
			'#size' => '255',
			'#prefix' => '<div id="reg_child_state">',
			'#suffix' => '</div>',
			'#attributes' => array (
					'id' => array (
							'edit-base-price' 
					) 
			),
			'#default_value' => isset ( $data->base_price ) ? $data->base_price : "" 
	);
	$form ['sale_price'] = array (
			'#type' => 'hidden',
			'#title' => 'Sale Price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->sale_price ) ? $data->sale_price : "" 
	);
	$form ['total_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Total Selling Price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->total_price ) ? $data->total_price : "" 
	);
	
	$form ['pay_status'] = array (
			'#type' => 'select',
			'#title' => 'Pay status',
			/* '#size' => '255', */
		/* 	'#options' => array (
					'Select',
					'Done',
					'Pending' 
			), */
			'#options'=>product_status(),
			'#attributes' => array (
					'placeholder' => '' 
			),
			'#ajax' => array (
					'callback' => 'ajax_total_pay_status_callback',
					'wrapper' => array (
							
							'reg_pay_status_state',
							'reg_payment_remaining_state'
					),
					'effect' => 'fade'
			),
			
			'#default_value' => isset ( $data->pay_status ) ? $data->pay_status : "" 
	);
	$form ['pay'] = array (
			'#type' => 'hidden',
			'#title' => 'pay ',
			 '#size' => '255', 
			
			'#attributes' => array (
					'placeholder' => ''
			),
			'#prefix' => '<div id="reg_pay_status_state">',
			'#suffix' => '</div>',
				
			'#default_value' => ''
	);
	$form ['payment_remaining'] = array (
			'#type' => 'hidden',
			'#title' => 'pay Reamaing',
			'#size' => '255',
			
			'#attributes' => array (
					'placeholder' => ''
			),
			'#prefix' => '<div id="reg_payment_remaining_state">',
			'#suffix' => '</div>',
			'#default_value' => ''
	);
	$form ['customer_start'] = array (
			'#markup' => '<h4><u>Customer Information:</u></h4>' 
	);
	
	$form ['cus_id'] = array (
			'#type' => 'select',
			'#title' => 'Select Customer',
			/* '#size' => '255', */
			'#options' => get_all_list ( 'st_customer', 'cus_id,f_name,l_name' ),
			'#attributes' => array (
					'placeholder' => '' 
			),
			'#default_value' => isset ( $data->cus_id ) ? $data->cus_id : "",
			'#ajax' => array (
					'callback' => 'ajax_customer_list_callback',
					'wrapper' => array (
							'order_f_name',
							'order_l_name',
							'order_address',
							'order_phone',
							'order_reference' 
					)
					,
					'effect' => 'fade' 
			) 
	);
	
	$form ['customer_options'] = array (
			'#markup' => '<h4><u>OR Add New Customer:</u></h4>' 
	);
	
	$form ['f_name'] = array (
			'#type' => 'textfield',
			'#title' => 'First name',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_f_name">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $data->f_name ) ? $data->f_name : "" 
	);
	$form ['l_name'] = array (
			'#type' => 'textfield',
			'#title' => 'Last name',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_l_name">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $data->l_name ) ? $data->l_name : "" 
	);
	$form ['address'] = array (
			'#type' => 'textarea',
			'#title' => 'Address',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_address">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $data->address ) ? $data->address : "" 
	);
	$form ['phone'] = array (
			'#type' => 'textfield',
			'#title' => 'Phone',
			'#size' => '20',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '20',
					'class' => array (
							'mobileval' 
					) 
			),
			'#prefix' => '<div id="order_phone">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $data->phone ) ? $data->phone : "" 
	);
	$form ['reference'] = array (
			'#type' => 'textfield',
			'#title' => 'Reference',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_reference">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $data->reference ) ? $data->reference : "" 
	);
	
	$form ['submit'] = array (
			'#type' => 'submit',
			'#value' => 'Save',
			'#attributes' => array (
					'onclick' => 'return register_user_validation();' 
			) 
	);
	return $form;
}

function ajax_total_pay_status_callback($form, $form_state){
	$commands = array ();
	
	if($form_state ['values'] ['pay_status']==2){
	$commands [] = ajax_command_replace ( "#reg_pay_status_state", render ( $form ['pay'] = array (
			'#type' => 'textfield',
			'#title' => 'Pays',
			'#name' => 'pay',
			'#id' => 'edit-pay-totall',
				
			'#size' => '255',
			'#attributes' =>array("onChange" => "paycal_rem_pay()"),
			'#prefix' => '<div id="reg_pay_status_state">',
			'#suffix' => '</div>',
			//'#value' => $qty->pay
	) ) );
	$commands [] = ajax_command_replace ( "#reg_payment_remaining_state", render ( $form ['payment_remaining'] = array (
			'#type' => 'textfield',
			'#title' => 'Payment Remaining',
			'#name' => 'payment_remaining',
			'#id' => 'edit-payment_remaining-totall',
	
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'readonly' => 'readonly'
			),
	
			'#prefix' => '<div id="reg_payment_remaining_state">',
			'#suffix' => '</div>',
			//'#value' => $qty->pay
	) ) );
	
	}
	else{

		$commands [] = ajax_command_replace ( "#reg_pay_status_state", render ( $form ['pay'] = array (
				'#type' => 'hidden',
				'#title' => 'Payy',
				'#name' => 'pay',
				'#id' => 'edit-pay-totall',
				
				
				'#size' => '255',
				'#attributes' => array (
						'placeholder' => ''
				),
		
				'#prefix' => '<div id="reg_pay_status_state">',
				'#suffix' => '</div>',
				//'#value' => $qty->pay
		) ) );
		
		$commands [] = ajax_command_replace ( "#reg_payment_remaining_state", render ( $form ['payment_remaining'] = array (
				'#type' => 'hidden',
				'#title' => 'payment_remaining',
				'#name' => 'payment_remaining',
				'#id' => 'edit-payment_remaining-totall',
				
				'#size' => '255',
				'#attributes' => array (
						'placeholder' => ''
				),
		
				'#prefix' => '<div id="reg_payment_remaining_state">',
				'#suffix' => '</div>',
				//'#value' => $qty->pay
		) ) );
		
	
		
	}
	
	
	return array (
			'#type' => 'ajax',
			'#commands' => $commands
	);
	
	
}
function ajax_total_selling_price_callback($form, $form_state) {
	
	// TODO 1.Get Value from form state and query for base price 2.Replace in base price column
	
	// return form ajax
	$base_price = get_data_by_pks ( 'st_price', $form_state ['values'] ['mid'], 'mid' );
	$qty = get_data_by_pks ( 'st_inventery', $form_state ['values'] ['mid'], 'mid' );
	$commands = array ();
	
	$commands [] = ajax_command_replace ( "#reg_child_state", render ( $form ['base_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Base Price',
			'#name' => 'base_price',
			'#id' => 'edit-qty-baseprice',
			'#size' => '255',
			'#prefix' => '<div id="reg_child_state">',
			'#suffix' => '</div>',
			'#value' => $base_price->base_price 
	) ) );
	$commands [] = ajax_command_replace ( "#reg_qty_state", render ( $form ['qty_baseprice'] = array (
			'#type' => 'textfield',
			'#title' => 'Qty Base',
			'#name' => 'qty_baseprice',
			'#id' => 'edit-qty-totall',
			
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '' 
			),
			
			'#prefix' => '<div id="reg_qty_state">',
			'#suffix' => '</div>',
			'#value' => $qty->qty 
	) ) );
	
	return array (
			'#type' => 'ajax',
			'#commands' => $commands 
	);
}
function ajax_check_qty_callback($form, $form_state) {
	
	// echo $form_state;
	$base_price = get_data_by_pks ( 'st_inventery', $form_state ['values'] ['mid'], 'mid' );
	
	if ($base_price->qty < $form_state ['values'] ['qty']) {
		$valueQty = '';
		// echo "Please select less than ".$base_price->qty;
	} else {
		$valueQty = $form_state ['values'] ['qty'];
		// echo "OK ".$base_price->qty;
	}
	$commands1 = array ();
	$commands1 [] = ajax_command_replace ( "#reg_qty_state", render ( $form ['qty'] = array (
			'#type' => 'textfield',
			'#title' => 'Qty',
			'#size' => '255',
			'#name' => 'qty',
			'#ajax' => array (
					'callback' => 'ajax_check_qty_callback',
					'wrapper' => 'reg_qty_state',
					'effect' => 'fade' 
			),
			'#prefix' => '<div id="reg_qty_state">',
			'#suffix' => '</div>',
			'#value' => $valueQty 
	) ) );
	
	return array (
			'#type' => 'ajax',
			'#commands' => $commands1 
	);
}
function st_order_validate($form, &$form_state) {
}
function st_order_add_submit($form, &$form_state) {
	
	
	global $user;
	$uid = $user->uid;
	$output = array ();
	
	//$cost_price = NULL;
	$net_profit = NULL;
	// assign variables
	$unit_price = get_data_by_pks ( 'st_price', $form_state ['values'] ['mid'], 'mid' );
	$unit_price=$unit_price->unit_price;
	$cost_price=$unit_price*$form_state ['values'] ['qty'];
	$form_state ['values'] ['base_price']*
	
	$cus_id = $form_state ['values'] ['cus_id'];
	$f_name = $form_state ['values'] ['f_name'];
	$l_name = $form_state ['values'] ['l_name'];
	$address = $form_state ['values'] ['address'];
	$phone = $form_state ['values'] ['phone'];
	$reference = $form_state ['values'] ['reference'];
	$mid = $form_state ['values'] ['mid'];
	$qty = $form_state ['values'] ['qty'];
	$base_price = $form_state ['values'] ['base_price'];
	$total_price = $form_state ['values'] ['total_price'];
	$cost_price = $cost_price;
	$net_profit = $net_profit;
	$pay_status = $form_state ['values'] ['pay_status'];
	$created = time ();
	$updated = time ();
	
	$net_profit=$total_price-$cost_price;
	$inv_result = get_data_by_pks ( 'st_inventery', $form_state ['values'] ['mid'], 'mid' );
	try {
		/*
		 * echo "<pre>";
		 * print_r($form_state['values']);
		 * exit;
		 */
		// update customer information if customer id provided
		if ($cus_id) {
			
			 $update_customer = db_query ( "update st_customer set 
					f_name='" . $f_name . "',
					l_name='" . $l_name . "',
					address='" . $address . "',
					phone='" . $phone . "',
					reference='" . $reference . "',
					updated='" . $updated . "',
					updatedby='" . $uid . "'
 					where cus_id='" . $cus_id . "'" )->execute ();
		} 		// insert customer information if customer id not provided
		else {
			
			if ($f_name != '') {
				$cus_id = db_insert ( 'st_customer' )->fields ( array (
						'f_name' => $f_name,
						'l_name' => $l_name,
						'address' => $address,
						'phone' => $phone,
						'reference' => $reference,
						'updated' => $updated,
						'updatedby' => $uid,
						'created' => time () 
				) )->execute ();
			}
		}
		
		
		

		 $query = db_insert ( 'st_order' )->fields ( array (
				'mid' => $mid,
				'qty' => $qty,
				'base_price' => $base_price,
				'total_price' => $total_price,
				'cost_price' => $cost_price,
				'net_profit' => $net_profit,
				'pay_status' => $pay_status,
				'cus_id' => $cus_id,
				'created' => time (),
				'updated' => time () 
		) )->execute ();
		 
		
	 	if($pay_status==2){
       try{
       	
		$query_a = db_insert ( 'st_borrower' )->fields ( array (
				
				'oid' => $query,
				'user_id' => $cus_id,
				'pay' => $form_state ['values'] ['pay'],
				'payment_remaining' => $form_state ['values'] ['payment_remaining'],
				'created' => time (),
		
		) )->execute ();
       }catch(Exception $e){
       	echo $e->getMessage();
       	exit;
       }
	 	}
		
		 
		$remaing_inv_result = $inv_result->qty - $form_state ['values'] ['qty'];
		$st_price = get_data_by_pks ( 'st_price', $form_state ['values'] ['mid'], 'mid' );
		$unitprice = $st_price->unit_price;
		$total_price = $remaing_inv_result * $unitprice;
		try {
			
			$update_qty = db_query ( "update  st_inventery set qty='" . $remaing_inv_result . "' where mid='" . $form_state ['values'] ['mid'] . "'" )->execute ();
		} catch ( Exception $e ) {
			print_r ( $e );
		}
		$update_total_cost = db_query ( "update  st_price set total_price='" . $total_price . "' where mid='" . $st_price->mid . "'" )->execute ();
		
		if ($query > 0) {
			drupal_set_message ( 'st_order added successfully' );
			drupal_goto ( 'admins/st_order/view' );
		}
	} catch ( Exception $e ) {
		
		$output ['error'] = "Could not insert record";
	}
}
function st_order_edit_submit($form, &$form_state) {
	global $user;
	$query = db_update ( 'st_order' )->fields ( array (
			'mid' => $form_state ['values'] ['mid'],
			'qty' => $form_state ['values'] ['qty'],
			'base_price' => $form_state ['values'] ['base_price'],
			'sale_price' => $form_state ['values'] ['sale_price'],
			'total_price' => $form_state ['values'] ['total_price'],
			'created' => strtotime ( $form_state ['values'] ['created'] ),
			'updated' => strtotime ( $form_state ['values'] ['updated'] ),
			'updatedby' => $form_state ['values'] ['updatedby'],
			'createdby' => $form_state ['values'] ['createdby'],
			'deleted' => $form_state ['values'] ['deleted'] 
	) )->condition ( 'id', $form_state ['values'] ['id'], '=' )->execute ();
	if ($form_state ['values'] ['id'] > 0) {
		drupal_set_message ( 'st_order update successfully' );
		drupal_goto ( 'admins/st_order/view' );
	}
}
function st_order_view($form, &$form_state) {
	$form ['html_markup'] = array (
			'#markup' => t ( '<a href="/admins/st_order/add">Add Order</a>' ) 
	);
	
	global $user;
	$default_status='';
	
	if (! empty ( $_GET ['status'] )) {
		$default_status = $_GET ['status'];
	}
	
	$form['#attributes']['autocomplete'] = 'off';
	
	$form ['search_form'] = array (
			'#title' => t ( 'Search' ),
			'#type' => 'fieldset',
			'#collapsible' => TRUE,
			'#collapsed' => TRUE,
			/* '#attached' => array (
			 'library' => array (
			 		array (
			 				'system',
			 				'drupal.collapse'
			 		)
			 )
			) */
	);
	/* $form ['search_form'] ['status'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Pending status 1-done,2-due' ),
			'#prefix' => ' <div  class="col-sm-6 form-group">',
			'#suffix' => '</div> ',
			'#size' => 100,
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '100' ,
					
						
			),
			'#default_value' => $default_status
	); */
	$form ['search_form'] ['status'] = array (
			'#type' => 'select',
			'#options' => product_status (),
				
			'#title' => t ( 'Pending status 1-done,2-due' ),
			'#prefix' => ' <div  class="col-sm-6 form-group">',
			'#suffix' => '</div> ',
			//'#size' => 100,
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '100' ,
						
	
			),
			'#default_value' => $default_status
	);
	

	$form ['search_form'] ['submit'] = array (
			'#type' => 'submit',
			'#prefix' => ' <div  class="col-sm-3 form-group">',
	
			'#value' => 'Submit'
	);
	
	$query = db_select ( 'st_order', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->orderBy ( 'tn.oid', 'desc' )->limit ( 10 );
	if (! empty ( $default_status )) {
	
		$query->condition ( 'tn.pay_status', $default_status, '=' );
	
	}
	$result = $query->execute ();
	$rows_articles = array ();	
	
	
	foreach ( $result as $records ) {
		//print_r($records->pay_status);
	
		//exit;
		
	
		$mat = get_ut_material_mat ( $records->mid );
		$rows_articles [] = array (
				$records->oid,
				$mat,
				$records->qty,
				$records->base_price,
				$records->total_price,
				$records->cost_price,
				$records->net_profit,
			//	$records->pay_status,
				product_status($records->pay_status),
				
				
		);
	}
	$headers = array (
			'Oid',
			'Product name',
			'Qty',
			'Base Selling Price / Unit',
			'Total Price',
			'Cost Price',
			'Net Profit',
			'Status'
	);
	$all_articles = theme ( 'table', array (
			'header' => $headers,
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}
function st_order_view_submit($form, &$form_state){

	$status = $form_state ['values'] ['status'];
	
	
	if (! empty ( $status )) {
		$param ["status"] = $status;
	}

	
	drupal_goto ( 'admins/st_order/view', array (
			'query' => $param
	) );
	
}
function st_order_detail($form, &$form_state, $id = NULL) {
	global $user;
	$query = db_select ( 'st_order', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->condition ( 'tn.id', $id, '=' )->orderBy ( 'tn.id', 'desc' );
	$result = $query->execute ()->fetchObject ();
	$rows_articles = array ();
	if (! empty ( $result ))
		foreach ( $result as $key => $value ) {
			
			$rows_articles [] = array (
					$key . ' :: ' . $value 
			);
		}
	
	$all_articles = theme ( 'table', array (
			'header' => array (),
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}

function ajax_customer_list_callback($form, $form_state) {
	// return form ajax
	$info = get_data_by_pks ( 'st_customer', $form_state ['values'] ['cus_id'], 'cus_id' );
	$commands = array ();
	
	$commands [] = ajax_command_replace ( "#order_f_name", render ( $form ['f_name'] = array (
			'#type' => 'textfield',
			'#title' => 'First name',
			'#size' => '255',
			'#name' => 'f_name',
			'#id' => 'edit-f-name',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_f_name">',
			'#suffix' => '</div>',
			'#value' => isset ( $info->f_name ) ? $info->f_name : "" 
	) ) );
	
	$commands [] = ajax_command_replace ( "#order_l_name", render ( $form ['l_name'] = array (
			'#type' => 'textfield',
			'#title' => 'Last name',
			'#size' => '255',
			'#name' => 'l_name',
			'#id' => 'edit-l-name',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_l_name">',
			'#suffix' => '</div>',
			'#value' => isset ( $info->l_name ) ? $info->l_name : "" 
	) ) );
	
	$commands [] = ajax_command_replace ( "#order_address", render ( $form ['address'] = array (
			'#type' => 'textarea',
			'#title' => 'Address',
			'#name' => 'address',
			'#id' => 'edit-address',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_address">',
			'#suffix' => '</div>',
			'#value' => isset ( $info->address ) ? $info->address : "" 
	) ) );
	$commands [] = ajax_command_replace ( "#order_phone", render ( $form ['phone'] = array (
			'#type' => 'textfield',
			'#title' => 'Phone',
			'#name' => 'phone',
			'#id' => 'edit-phone',
			'#size' => '20',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '20',
					'class' => array (
							'mobileval' 
					) 
			),
			'#prefix' => '<div id="order_phone">',
			'#suffix' => '</div>',
			'#value' => isset ( $info->phone ) ? $info->phone : "" 
	) ) );
	
	$commands [] = ajax_command_replace ( "#order_reference", render ( $form ['reference'] = array (
			'#type' => 'textfield',
			'#title' => 'Reference',
			'#name' => 'reference',
			'#id' => 'edit-reference',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#prefix' => '<div id="order_reference">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $info->reference ) ? $info->reference : "" 
	) ) );
	
	return array (
			'#type' => 'ajax',
			'#commands' => $commands 
	);
}

