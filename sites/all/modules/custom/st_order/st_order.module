<?php
function st_order_permission() {
	return array (
			'st_order_per_add' => array (
					'title' => 'Create form st_order According To choice',
					'description' => 'Form st_order Creation' 
			),
			'st_order_per_view' => array (
					'title' => 'View The List Of st_order',
					'description' => 'View st_order according to his powers' 
			) 
	);
}
function st_order_menu() {
	$items ['admins/st_order/add'] = array (
			'title' => 'Add New St Order Form',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_add' 
			),
			'access arguments' => array (
					0 => 'st_order_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_order/view'] = array (
			'title' => 'St Order List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_view' 
			),
			'access arguments' => array (
					0 => 'st_order_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_order/edit/%'] = array (
			'title' => 'St Order Edit',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_add',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_order_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_order/detail/%'] = array (
			'title' => 'St Order detail',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_order_detail',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_order_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	return $items;
}
function st_order_add($form, &$form_state, $id = NULL) {
	
	 drupal_add_js ( 'misc/user_validation.js', 'file' );
	if (! empty ( $id )) {
		$data = get_data_by_pks ( 'st_order', $id ,'mid' );
		
		$form ['#submit'] [] = "st_order_edit_submit";
		$form ['id'] = array (
				'#type' => 'value',
				'#value' => $id 
		);
	}
	$form ['mid'] = array (
			'#type' => 'select',
			'#title' => 'Mid',
			'#options' => ut_material_inventery (),
			'#attributes' => array (
					'placeholder' => '' 
			),
			
			'#default_value' => isset ( $data->mid ) ? $data->mid : "",
			'#ajax' => array (
					'callback' => 'ajax_total_selling_price_callback',
					'wrapper' => 'reg_child_state',
					// 'method' => 'replace',
					'effect' => 'fade' 
			) 
	);
	$form ['qty'] = array (
			'#type' => 'textfield',
			'#title' => 'Qty',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->qty ) ? $data->qty : "" 
	)
	;
	//$base_price = get_data_by_pks ( 'st_price', $form['base_price'],'mid' );
	//print_r($base_price);
	//print_r($base_price->base_price);
	//print_r($data->mid);
	
	$form ['base_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Base Price',
			'#size' => '255',
			'#prefix' => '<div id="reg_child_state">',
			'#suffix' => '</div>',
			'#attributes' =>  array('id' => array('edit-base-price')),
			'#default_value' => isset ( $data->base_price ) ? $data->base_price : "" 
				
	);
	$form ['sale_price'] = array (
			'#type' => 'hidden',
			'#title' => 'Sale Price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->sale_price ) ? $data->sale_price : "" 
	);
	$form ['total_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Total Selling Price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->total_price ) ? $data->total_price : "" 
	);
$form['f_name']=array (
  '#type' => 'textfield',
  '#title' => 'First name',
  '#size' => '255',
  '#attributes' => 
  array (
    'placeholder' => '',
    'maxlength' => '255',
  ),
  '#default_value' => isset($data->f_name)?$data->f_name:"",
);
$form['l_name']=array (
  '#type' => 'textfield',
  '#title' => 'Last name',
  '#size' => '255',
  '#attributes' => 
  array (
    'placeholder' => '',
    'maxlength' => '255',
  ),
  '#default_value' => isset($data->l_name)?$data->l_name:"",
);
$form['address']=array (
  '#type' => 'textfield',
  '#title' => 'Address',
  '#size' => '255',
  '#attributes' => 
  array (
    'placeholder' => '',
    'maxlength' => '255',
  ),
  '#default_value' => isset($data->address)?$data->address:"",
);
$form['phone']=array (
  '#type' => 'textfield',
  '#title' => 'Phone Number',
  '#size' => '20',
  '#attributes' => 
  array (
    'placeholder' => '',
    'maxlength' => '20',
  ),
  '#default_value' => isset($data->phone)?$data->phone:"",
);
$form['reference']=array (
		'#type' => 'textfield',
		'#title' => 'Reference',
		'#size' => '255',
		'#attributes' =>
		array (
				'placeholder' => '',
				'maxlength' => '255',
		),
		'#default_value' => isset($data->reference)?$data->reference:"",
);
	/*
	    * $form ['cost_price'] = array (
	    * '#type' => 'hidden',
	    * '#title' => 'Cost Price',
	    * '#size' => '255',
	    * '#attributes' =>array('id' => array('edit-cost-price')),
	    * '#default_value' => isset ( $data->cost_price ) ? $data->cost_price : ""
	    * );
	    * $form ['net_profit'] = array (
	    * '#type' => 'hidden',
	    * '#title' => 'Net Profit',
	    * '#size' => '255',
	    * '#attributes' =>array('id' => array('edit-net-profit')),
	    *
	    * '#default_value' => isset ( $data->net_profit ) ? $data->net_profit : ""
	    * );
	    */
	
	$form ['submit'] = array (
			'#type' => 'submit',
			'#value' => 'Save',
			'#attributes'=>array('onclick'=>'return register_user_validation();'),
				
			
	);
	return $form;
}
function ajax_total_selling_price_callback($form, $form_state) {
	
	// TODO 1.Get Value from form state and query for base price 2.Replace in base price column
	
	//return form ajax
	$base_price = get_data_by_pks ( 'st_price', $form_state ['values'] ['mid'] ,'mid');
	
	$commands = array ();
	$commands [] = ajax_command_replace ( "#reg_child_state", render ( $form ['base_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Base Price',
			'#name' => 'base_price',
			'#size' => '255',
			'#prefix' => '<div id="reg_child_state">',
			'#suffix' => '</div>',
			'#attributes' =>  array('id' => array('edit-base-price')),
			
			'#value' => $base_price->base_price,
	
	)));
	return array (
			'#type' => 'ajax',
			'#commands' => $commands 
	);
	//return  $form['base_price'];
	//return $form_state['values']['mid'];
	//return  '<div id="reg_child_state">'.$form_state['values']['mid'].'</div>';
	/* return  '<div id="reg_child_state">
			<input type="text" value="'.$form_state['values']['mid'].'" id="edit-base-price"/>
					</div>'; */
	/* $form ['base_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Base Price',
			'#size' => '255',
			'#prefix' => '<div id="reg_child_state">',
			'#suffix' => '</div>',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255'
			),
			'#value' => $base_price->base_price,
	
	); */
	
	//return  $form['base_price'];
}
function st_order_validate($form, &$form_state) {
}
function st_order_add_submit($form, &$form_state) {
	
	 $inv_result=get_data_by_pks('st_inventery',$form_state ['values'] ['mid'],'mid');

	global $user;
	$output=array();
	$unit_price=get_data_by_pks('st_price',$form_state ['values'] ['mid'],'mid');
	$cost_price = $form_state ['values'] ['qty'] * $unit_price->unit_price;
	echo "<br/>";
	$net_profit = $form_state ['values'] ['total_price'] - $cost_price;
	echo "<br/>";
	try {
		$query = db_insert ( 'st_order' )->fields ( array (
				'mid' => $form_state ['values'] ['mid'],
				'qty' => $form_state ['values'] ['qty'],
				'base_price' => $form_state ['values'] ['base_price'],
		
				'total_price' => $form_state ['values'] ['total_price'],
				'cost_price' => $cost_price,
				'net_profit' => $net_profit
		)
			 )->execute ();
			// $output['oid']=$inst_grp;
			 $remaing_inv_result=$inv_result->qty-$form_state ['values'] ['qty'];
			 $unit_price=get_data_by_pks('st_inventery',$form_state ['values'] ['mid'],'mid');
			 $rem_total_bal=$unit_price->total_price-$form_state ['values'] ['total_price'];
			 
			 
			 try {
			 	$update_qty=db_query("update  st_inventery set qty='".$remaing_inv_result."' where mid='".$form_state ['values'] ['mid']."'")->execute();
			 	$update_total_price=db_query("update  st_price set total_price='".$rem_total_bal."' where mid='".$form_state ['values'] ['mid']."'")->execute();
			 		
			 } catch (Exception $e) {
			 	print_r($e);
			 }
			 
			 $query = db_insert ( 'st_customer' )->fields ( array (
			 		'oid' => $query,
			 		'f_name' =>$form_state['values']['f_name'],
			 		'l_name' => $form_state['values']['l_name'],
			 		'address' => $form_state['values']['address'],
			 		'phone' => $form_state['values']['phone'],
			 		'reference' =>$form_state['values']['reference'],
			 )
			 	 )->execute ();
			 
			 	 if ($query > 0) {
			 	 	drupal_set_message ( 'st_order added successfully' );
			 	 	drupal_goto ( 'admins/st_order/view' );
			 	 }
		
	} catch (Exception $e) {
		
		$output['error']="Could not insert record";
		
	}
	
}
function st_order_edit_submit($form, &$form_state) {
	global $user;
	$query = db_update ( 'st_order' )->fields ( array (
			'mid' => $form_state ['values'] ['mid'],
			'qty' => $form_state ['values'] ['qty'],
			'base_price' => $form_state ['values'] ['base_price'],
			'sale_price' => $form_state ['values'] ['sale_price'],
			'total_price' => $form_state ['values'] ['total_price'],
			'created' => strtotime ( $form_state ['values'] ['created'] ),
			'updated' => strtotime ( $form_state ['values'] ['updated'] ),
			'updatedby' => $form_state ['values'] ['updatedby'],
			'createdby' => $form_state ['values'] ['createdby'],
			'deleted' => $form_state ['values'] ['deleted'] 
	) )->condition ( 'id', $form_state ['values'] ['id'], '=' )->execute ();
	if ($form_state ['values'] ['id'] > 0) {
		drupal_set_message ( 'st_order update successfully' );
		drupal_goto ( 'admins/st_order/view' );
	}
}
function st_order_view($form, &$form_state) {
	$form ['html_markup'] = array (
			'#markup' => t ( '<a href="http://shardatraders.com/admins/st_order/add">Add Order</a>' ) 
	);
	
	global $user;
	$query = db_select ( 'st_order', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->orderBy ( 'tn.oid', 'desc' )->limit ( 10 );
	$result = $query->execute ();
	$rows_articles = array ();
	foreach ( $result as $records ) {
		/*
		 * $created=util_date_format_short($records->created);
		 * $updated=util_date_format_short($records->updated);
		 * if($records->deleted){
		 * $deleted="Deleted";
		 * }
		 * else
		 * {
		 * //$deleted=l("<i class='icon-fixed-width icon-trash'></i>Delete",'admins/st_order/edit/'.$records->,array('html'=>TRUE));
		 * }
		 */
		 $mat=get_ut_material_mat ($records->mid );
		$rows_articles [] = array (
				$records->oid,
				$mat,
				$records->qty,
				$records->base_price,
				$records->total_price,
				$records->cost_price,
				$records->net_profit 
		);
	}
	$headers = array (
			'Oid',
			'Product name',
			'Qty',
			'Base Selling Price / Unit',
			'Total Price',
			'Cost Price',
			'Net Profit' 
	);
	$all_articles = theme ( 'table', array (
			'header' => $headers,
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}
function st_order_detail($form, &$form_state, $id = NULL) {
	global $user;
	$query = db_select ( 'st_order', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->condition ( 'tn.id', $id, '=' )->orderBy ( 'tn.id', 'desc' );
	$result = $query->execute ()->fetchObject ();
	$rows_articles = array ();
	if (! empty ( $result ))
		foreach ( $result as $key => $value ) {
			
			$rows_articles [] = array (
					$key . ' :: ' . $value 
			);
		}
	
	$all_articles = theme ( 'table', array (
			'header' => array (),
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}
function get_data_by_pks($table, $mid ,$field) {
	$Object = db_query ( "select * from $table where $field = :id", array (
			':id' => $mid 
	) )->fetchObject ();
	return $Object;
}
