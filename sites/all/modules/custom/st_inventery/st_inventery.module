<?php
function st_inventery_permission() {
	return array (
			'st_inventery_per_add' => array (
					'title' => 'Create form st_inventery According To choice',
					'description' => 'Form st_inventery Creation' 
			),
			'st_inventery_per_view' => array (
					'title' => 'View The List Of st_inventery',
					'description' => 'View st_inventery according to his powers' 
			) 
	);
}
function st_inventery_menu() {
	$items ['admins/st_inventery/add'] = array (
			'title' => 'Add New St Inventery Form',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_inventery_add' 
			),
			'access arguments' => array (
					0 => 'st_inventery_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_inventery/view'] = array (
			'title' => 'St Inventery List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_inventery_view' 
			),
			'access arguments' => array (
					0 => 'st_inventery_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_inventery/edit/%'] = array (
			'title' => 'St Inventery Edit',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_inventery_add',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_inventery_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_inventery/detail/%'] = array (
			'title' => 'St Inventery detail',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_inventery_detail',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_inventery_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	return $items;
}
function st_inventery_add($form, &$form_state, $id = NULL) {
	// ut_material_qty();
	// exit;
	drupal_add_js ( 'misc/user_validation.js', 'file' );
	
	if (! empty ( $id )) {
		$data = get_data_by_pks ( 'st_inventery', $id );
		
		$form ['#submit'] [] = "st_inventery_edit_submit";
		$form ['id'] = array (
				'#type' => 'value',
				'#value' => $id 
		);
	}
	$form ['mid'] = array (
			'#type' => 'select',
			'#title' => 'Mid',
			'#options' => ut_material_inventery (),
  /* '#attributes' => 
  array (
    'placeholder' => '',
  ), */
  '#default_value' => isset ( $data->mid ) ? $data->mid : "" 
	);
	$form ['qty'] = array (
			'#type' => 'textfield',
			'#title' => 'Qty',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->qty ) ? $data->qty : "" 
	);
	
	$form ['unit'] = array (
			'#type' => 'select',
			'#title' => 'Unit',
			'#options' => ut_material_qty (),
		/* '#attributes' =>
		 array (
		 		'placeholder' => '',
		 ), */
		'#default_value' => isset ( $data->unit ) ? $data->unit : "" 
	);
	$form ['unit_prices'] = array (
			'#type' => 'textfield',
			'#title' => 'Unit Prices',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->unit_price ) ? $data->unit_price : "" 
	);
	$form ['total_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Total Price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->total_price ) ? $data->total_price : "" 
	);
	$form ['base_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Base price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->base_price ) ? $data->base_price : "" 
	);
	$form ['sale_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Sale Price',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->sale_price ) ? $data->sale_price : "" 
	);
	
	$form ['submit'] = array (
			'#type' => 'submit',
			'#value' => 'Save' 
	);
	return $form;
}
function st_inventery_validate($form, &$form_state) {
}
function st_inventery_add_submit($form, &$form_state) {
	$output = array ();
	global $user;
	
	$query = db_insert ( 'st_inventery' )->fields ( array (
			'mid' => $form_state ['values'] ['mid'],
			'qty' => $form_state ['values'] ['qty'],
			'unit' => $form_state ['values'] ['unit'],
			'created' => time () 
	)
	 )->execute ();
	// $group_id=db_query("SELECT g_id from gb_group where g_name='$arg1[g_name]'")->fetchAll();
	
	$query = db_insert ( 'st_price' )->fields ( array (
			'mid' => $form_state ['values'] ['mid'],
			'unit_price' => $form_state ['values'] ['unit_prices'],
			'total_price' => $form_state ['values'] ['total_price'],
			'base_price' => $form_state ['values'] ['base_price'],
			'sale_price' => $form_state ['values'] ['sale_price'],
			'created' => time () 
	)
	 )->execute ();
	if ($query > 0) {
		drupal_set_message ( 'st_inventery added successfully' );
		drupal_goto ( 'admins/st_inventery/view' );
	}
}
function st_inventery_edit_submit($form, &$form_state) {
	global $user;
	$query = db_update ( 'st_inventery' )->fields ( array (
			'mid' => $form_state ['values'] ['mid'],
			'qty' => $form_state ['values'] ['qty'],
			'unit' => $form_state ['values'] ['unit'],
			'created' => strtotime ( $form_state ['values'] ['created'] ),
			'updated' => strtotime ( $form_state ['values'] ['updated'] ),
			'updatedby' => $form_state ['values'] ['updatedby'],
			'createdby' => $form_state ['values'] ['createdby'],
			'deleted' => $form_state ['values'] ['deleted'] 
	) )->condition ( 'id', $form_state ['values'] ['id'], '=' )->execute ();
	if ($form_state ['values'] ['id'] > 0) {
		drupal_set_message ( 'st_inventery update successfully' );
		drupal_goto ( 'admins/st_inventery/view' );
	}
}
function st_inventery_view($form, &$form_state) {
	global $user;
	
	
	 $form ['html_markup'] = array (
			'#markup' => t ( '<a href="http://shardatraders.com/admins/st_inventery/add">Add Inventery</a>' ) 
	); 
	
	$query = db_select ( 'st_inventery', 'tn' );
	$query->join('st_price', 'b', 'tn.mid = b.mid');
	
	$query->extend ( 'PagerDefault' )
	->fields ( 'tn' )
	->fields ( 'b' )
	
	//->orderBy ( 'tn.int_id', 'desc' )
	->limit ( 20 );
	
	if (! empty ( $default_mid )) {
		$query->condition ( 'tn.mid', $default_mid, '=' );
	}
	$result = $query->execute ();
	
	$rows_articles = array ();
	foreach ( $result as $records ) {
		 $created=util_date_format_short($records->created);
		
		$unit = get_ut_material_qty ( $records->unit );
		$mat = get_ut_material_mat ( $records->mid );
		
		$rows_articles [] = array (
				$records->int_id,
				$mat,
				$records->qty,
				$unit,
				$records->unit_price,
				$records->total_price,
				$records->base_price,
				$records->sale_price,
				$created
		);
	}
	
	$headers = array (
			'Int_id',
			'Product name',
			'Qty',
			'Units(kg/quental..)' ,
			'Unit Per Price INR',
			'Total Price INR',
			'Base Price INR',
			'Sale price INR',
			'Created'
	);
	$all_articles = theme ( 'table', array (
			'header' => $headers,
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			
			'#markup' => $all_articles 
	);
	
	return $form;
}
function st_inventery_detail($form, &$form_state, $id = NULL) {
	global $user;
	$query = db_select ( 'st_inventery', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->condition ( 'tn.id', $id, '=' )->orderBy ( 'tn.id', 'desc' );
	$result = $query->execute ()->fetchObject ();
	$rows_articles = array ();
	if (! empty ( $result ))
		foreach ( $result as $key => $value ) {
			
			$rows_articles [] = array (
					$key . ' :: ' . $value 
			);
		}
	
	$all_articles = theme ( 'table', array (
			'header' => array (),
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}
function ut_material_inventery() {
	$par1 = array ();
	$parent_cat1 = db_query ( "SELECT mid from st_material" )->fetchAll ();
	// echo "<pre>";
	// print_r($parent_cat[0]->material_category);
	foreach ( $parent_cat1 as $res ) {
		// print_r($res);
		$par1 ['0'] = 'select';
		$par1 [] = get_ut_material_mat ( $res->mid );
	}
	return $par1;
}
function ut_material_qty() {
	$numbers = array (
			'Select',
			'Kg',
			'Quental',
			'50KG/Bag',
			'sqft'
	)
	;
	return $numbers;
}
function get_ut_material_qty($unit) {
	$qrt = ut_material_qty ();
	
	return $qrt [$unit];
}
function get_ut_material_mat($mat) {
	$mat_name = db_query ( "SELECT name from st_material where mid=$mat" )->fetchAll ();
	return $mat_name [0]->name;
}