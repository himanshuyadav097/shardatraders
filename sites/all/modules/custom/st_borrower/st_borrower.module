<?php
function st_borrower_permission() {
	return array (
			'st_borrower_per_add' => array (
					'title' => 'Create form st_borrower According To choice',
					'description' => 'Form st_borrower Creation' 
			),
			'st_borrower_per_view' => array (
					'title' => 'View The List Of st_borrower',
					'description' => 'View st_borrower according to his powers' 
			) 
	);
}
function st_borrower_menu() {
	$items ['admins/st_borrower/add'] = array (
			'title' => 'Add New St Borrower Form',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_borrower_add' 
			),
			'access arguments' => array (
					0 => 'st_borrower_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_borrower/view'] = array (
			'title' => 'St Borrower List',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_borrower_view' 
			),
			'access arguments' => array (
					0 => 'st_borrower_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_borrower/edit/%'] = array (
			'title' => 'Borrower Edit',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_borrower_add',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_borrower_per_add' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	$items ['admins/st_borrower/detail/%'] = array (
			'title' => 'Borrower detail',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					0 => 'st_borrower_detail',
					1 => 3 
			),
			'access arguments' => array (
					0 => 'st_borrower_per_view' 
			),
			'description' => 'General',
			'type' => 0,
			'weight' => 1 
	);
	return $items;
}
function st_borrower_add($form, &$form_state, $id = NULL) {
	drupal_add_js ( 'misc/user_validation.js', 'file' );
	
	if (! empty ( $id )) {
		$data = get_data_by_pks ( 'st_borrower', $id,'id' );
		
		$data1 = get_data_by_pks ( 'st_order', $data->oid,'oid' );
		
		$form ['#submit'] [] = "st_borrower_edit_submit";
		$form ['id'] = array (
				'#type' => 'value',
				'#value' => $id 
		);
	}
	$form ['oid'] = array (
			'#type' => 'select',
			'#title' => 'Oid',
			'#options' => ut_order_id (),
				'#attributes' => array (
					'placeholder' => '' 
			),
			'#disabled' => TRUE,
				
			'#ajax' => array (
					'callback' => 'ajax_order_callback',
					//'wrapper' => 'reg_child_state',
					'wrapper' =>array('reg_order_state','reg__cus_id'),
					// 'method' => 'replace',
					'effect' => 'fade'
			) ,
				
			'#default_value' => isset ( $data->oid ) ? $data->oid : "" 
	);
 
	$form ['user_id'] = array (
			'#type' => 'textfield',
			'#title' => 'Customer name',
			//'#options' => ut_user_id (),
			'#attributes' => array (
					'placeholder' => ''
			),
			'#disabled' => TRUE,
			'#prefix' => '<div id="reg_order_state">',
			'#suffix' => '</div>',
			'#default_value' => isset ( $data->user_id ) ? $data->user_id : ""
	);

	$form ['cus_id'] = array (
			'#type' => 'hidden',
 			'#prefix' => '<div id="reg_cus_id">',
			'#suffix' => '</div>'
   	);
	$form ['total_price'] = array (
			'#type' => 'textfield',
			'#title' => 'Total Selling Price',
			'#size' => '255',
			'#disabled' => TRUE,
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255'
			),
			'#default_value' => isset ($data1->total_price ) ? $data1->total_price : ""
	);
	$form ['pay'] = array (
			'#type' => 'textfield',
			'#title' => 'Pay',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->pay ) ? $data->pay : "" 
	);
	$form ['payment_remaining'] = array (
			'#type' => 'textfield',
			'#title' => 'Payment_remaining',
			'#size' => '255',
			//'#disabled' => TRUE,
			'#attributes' => array (
					'placeholder' => '',
					'maxlength' => '255' 
			),
			'#default_value' => isset ( $data->payment_remaining ) ? $data->payment_remaining : "" 
	);
	
	$form ['submit'] = array (
			'#type' => 'submit',
			'#value' => 'Save' 
	);
	return $form;
}

function ajax_order_callback($form, $form_state){
	
	$order = get_data_by_pks ( 'st_order', $form_state ['values'] ['oid'], 'oid' );
	$cus_id=$order->cus_id;
	$cus_name = get_data_by_pks ( 'st_customer', $cus_id, 'cus_id' );
	$commands [] = ajax_command_replace ( "#reg_order_state", render( $form ['user_id'] = array (
			'#type' => 'textfield',
			'#title' => 'Customer name',
			'#name' => 'user_id',
			'#id' => 'edit-user_id',
			'#size' => '255',
			'#attributes' => array (
					'placeholder' => ''
			),
			
			'#prefix' => '<div id="reg_order_state">',
			'#suffix' => '</div>',
			'#value' => $cus_name->f_name.' '.$cus_name->l_name
	)));
		$commands [] = ajax_command_replace ( "#reg_cus_id", render( $form ['cus_id'] = array (
					'#type' => 'hidden',
 					'#name' => 'cus_id',
					'#id' => 'edit-cus_id',
					'#prefix' => '<div id="reg_cus_id">',
					'#suffix' => '</div>',
					'#value' => $cus_name->cus_id
			)
		));
	 return array (
			'#type' => 'ajax',
			'#commands' => $commands 
	); 
}
function st_borrower_validate($form, &$form_state) {
}
function st_borrower_add_submit($form, &$form_state) {
	
	global $user;
	$query = db_insert ( 'st_borrower' )->fields ( array (
			'oid' => $form_state ['values'] ['oid'],
			'user_id' => $form_state['values']['cus_id'],
			'pay' => $form_state ['values'] ['pay'],
			'payment_remaining' => $form_state ['values'] ['payment_remaining'],
			'created' => time(),
			
	) )->execute ();
	if ($query > 0) {
		drupal_set_message ( 'st_borrower added successfully' );
		drupal_goto ( 'admins/st_borrower/view' );
	}
}
function st_borrower_edit_submit($form, &$form_state) {
	
	global $user;
	$oid=$form_state ['values'] ['oid'];
	$real_pay=db_query("select * from st_order where oid=$oid")->fetchAll ();
	
	$pay=$form_state ['values'] ['pay'];
	$payment_remaining=$form_state ['values'] ['payment_remaining'];
	$query = db_update ( 'st_borrower' )->fields ( array (
			'oid' => $oid,
			'user_id' => $form_state ['values'] ['user_id'],
			'pay' => $pay,
			'payment_remaining' => $payment_remaining,
			'created' => time(),
			'updated' => time(),
			/* 'updatedby' => $form_state ['values'] ['updatedby'],
			'createdby' => $form_state ['values'] ['createdby'],
			'deleted' => $form_state ['values'] ['deleted']  */
	) )->condition ( 'id', $form_state ['values'] ['id'], '=' )->execute ();
	
	if($real_pay[0]->total_price<=$pay){
		
		$query = db_update ( 'st_order' )->fields ( array (
				'oid' => $oid,
				'pay_status' =>1,
				'created' => time ()
		)
				)->condition ( 'oid', $oid, '=' )->execute ();
		
				if ($query > 0) {
					drupal_set_message ( 'st_borrower added successfully' );
					drupal_goto ( 'admins/st_borrower/view' );
				}
	}
	if ($form_state ['values'] ['id'] > 0) {
		if($pay==$real_pay){
		echo "111";
		exit;
			$result = db_query("UPDATE {st_order} SET pay_status = 1 WHERE created >= %d");
		}
		drupal_set_message ( 'st_borrower update successfully' );
		drupal_goto ( 'admins/st_borrower/view' );
	}
}
function st_borrower_view($form, &$form_state) {
	global $user;
	$default_user_id='';
	if (! empty ( $_GET ['user_id'] )) {
		$default_user_id = $_GET ['user_id'];
	}
	$form['#attributes']['autocomplete'] = 'off';
	
	$form ['search_form'] = array (
			'#title' => t ( 'Search' ),
			'#type' => 'fieldset',
			'#collapsible' => TRUE,
			'#collapsed' => TRUE,
			/* '#attached' => array (
			 'library' => array (
			 		array (
			 				'system',
			 				'drupal.collapse'
			 		)
			 )
			) */
	);
	$form ['search_form'] ['user_id'] = array (
			'#type' => 'select',
			'#title' => t ( 'Borrower Name' ),
			'#options' => get_all_list ( 'st_customer', 'cus_id,f_name,l_name' ),
				
			'#prefix' => ' <div  class="col-sm-6 form-group">',
			'#suffix' => '</div> ',
			'#attributes' => array (
					'placeholder' => '',
					//'maxlength' => '100' ,
			),
			'#default_value' => $default_user_id
	);
	$form ['search_form'] ['submit'] = array (
			'#type' => 'submit',
			'#prefix' => ' <div  class="col-sm-3 form-group">',
	
			'#value' => 'Submit'
	);
	$query = db_select ( 'st_borrower', 'tn' )
	->extend ( 'PagerDefault' )
	->fields ( 'tn' )
	->orderBy ( 'tn.id', 'desc' )
	->limit ( 20 );
	if (! empty ( $default_user_id )) {
		$query->condition ( 'tn.user_id', intval($default_user_id), '=' );
	}
	$result = $query->execute ();
	$rows_articles = array ();
	foreach ( $result as $records ) {
		
		$created = util_date_format_short ( $records->created );
		$updated = util_date_format_short ( $records->updated );
		$user_id=$records->user_id;
		$res1=get_data_by_pks('st_customer',$user_id,'cus_id');
		$pay_status=get_data_by_pks('st_order',$records->oid,'oid');
		if(isset($pay_status->pay_status)){
			$pay_status=$pay_status->pay_status;
			}else{
				$pay_status='None';
			}
		
		if ($records->deleted) {
			$deleted = "Deleted";
		} else {
			$deleted = l ( "<i class='icon-fixed-width icon-trash'></i>Delete", 'admins/st_borrower/edit/' . $records->id, array (
					'html' => TRUE 
			) );
		}
		if($pay_status==1){
			$link=$records->id;
		}else{
			
			$link=l ($records->id,'admins/st_borrower/edit/' . $records->id );
		}
		$rows_articles [] = array (
			//	l ($records->id,'admins/st_borrower/edit/' . $records->id ),
				$link,
				$records->oid,
				$records->user_id,
				ucwords($res1->f_name . ' '. $res1->l_name),
				//ucfirst($res1->l_name),
				$records->pay,
				$records->payment_remaining,
				//$pay_status->pay_status,
				product_status($pay_status),
				$created,
		);
	}
	$headers = array (
			'ID',
			'OID',
			'UID',
			'Name',
			
			'Pay',
			'Pay Remain',
			'Status',
			'Created'
			
	);
	$all_articles = theme ( 'table', array (
			'header' => $headers,
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' ,
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}

function st_borrower_view_submit($form, &$form_state) {
	$user_id = $form_state ['values'] ['user_id'];
	if (! empty ( $user_id )) {
		$param ["user_id"] = $user_id;
	}
	drupal_goto ( 'admins/st_borrower/view', array (
			'query' => $param
	) );
	
}
function st_borrower_detail($form, &$form_state, $id = NULL) {
	global $user;
	$query = db_select ( 'st_borrower', 'tn' )->extend ( 'PagerDefault' )->fields ( 'tn' )->condition ( 'tn.id', $id, '=' )->orderBy ( 'tn.id', 'desc' );
	$result = $query->execute ()->fetchObject ();
	$rows_articles = array ();
	if (! empty ( $result ))
		foreach ( $result as $key => $value ) {
			
			$rows_articles [] = array (
					$key . ' :: ' . $value 
			);
		}
	
	$all_articles = theme ( 'table', array (
			'header' => array (),
			'rows' => $rows_articles,
			'empty' => 'No Record Found',
			'attributes' => array (
					'class' => array (
							'list-table' 
					),
					'style' => 'width:100%;' 
			) 
	) );
	$all_articles .= theme ( 'pager' );
	$form ['all_articles'] = array (
			'#markup' => $all_articles 
	);
	return $form;
}

